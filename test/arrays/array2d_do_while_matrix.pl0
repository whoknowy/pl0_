// 二维数组矩阵运算与do-while循环
const n = 3;
var i, j, sum, a(1:3, 1:3), b(1:3, 1:3), c(1:3, 1:3);

begin
    // 使用do-while循环初始化矩阵A
    i := 1;
    do
    begin
        j := 1;
        do
        begin
            a(i, j) := i + j;
            j := j + 1
        end
        while j <= n;
        i := i + 1
    end
    while i <= n;
    
    // 使用do-while循环初始化矩阵B
    i := 1;
    do
    begin
        j := 1;
        do
        begin
            b(i, j) := i * j;
            j := j + 1
        end
        while j <= n;
        i := i + 1
    end
    while i <= n;
    
    // 使用do-while循环进行矩阵加法 C = A + B
    i := 1;
    do
    begin
        j := 1;
        do
        begin
            c(i, j) := a(i, j) + b(i, j);
            j := j + 1
        end
        while j <= n;
        i := i + 1
    end
    while i <= n;
    
    // 使用do-while循环输出结果矩阵C
    i := 1;
    do
    begin
        j := 1;
        do
        begin
            write(c(i, j));
            j := j + 1
        end
        while j <= n;
        i := i + 1
    end
    while i <= n;
    
    // 使用do-while循环计算矩阵C所有元素之和
    sum := 0;
    i := 1;
    do
    begin
        j := 1;
        do
        begin
            sum := sum + c(i, j);
            j := j + 1
        end
        while j <= n;
        i := i + 1
    end
    while i <= n;
    
    write(sum)
end.
